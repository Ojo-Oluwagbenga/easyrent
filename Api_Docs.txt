API DOCS AND IMPLEMENTATION

url: https://easyrent-zeta.vercel.app/

<Request Token>
    axios({
        ...
        url: '.../fetchtoken/{accesstoken}',
        method: 'GET',
        ...
    ))

    Example Success:
    {
        status:200,
        "request_token":"e0wgtea3uzOBC7PPBBt5CiAcstS4TKdWOipZJC0h"
    }
</Request Token>

<User Create>
    axios({
        ...
        url: ".../apis/user/create",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
                    'Cache-Control': 'no-cache',
                    'Pragma': 'no-cache',
                    "BEARER-TOKEN" : "-"
        },
        data:{
            email:"email"
            password:"password"
            confirm_password:"c_pass"
        }
        ...
    ))
    Example Success
    {
        "status":"200",
        "data":{
            "user":"v78Q"
        }
    }
</User Create>

<User Email-Validate>
    //To confirm the code sent to their mail. User can then be logged in afterward at the Validate endpoint.
    axios({
        ...
        url: ".../apis/user/validate",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
                    'Cache-Control': 'no-cache',
                    'Pragma': 'no-cache',
                    "BEARER-TOKEN" : "-"
        },
        data:{
            email:"email"
            temp_code:"temp_code" //This is the temp code sent to their mail
        }
        ...
    ))
</User Email-Validate>

<User Validate>
    axios({
        ...
        url: ".../apis/user/validate",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
                    'Cache-Control': 'no-cache',
                    'Pragma': 'no-cache',
                    "BEARER-TOKEN" : "-"
        },
        data:{
            email:"email"
            password:"password"
        }
        ...
    ))
</User Validate>

<User Fetch>
    axios({
        ...
        url: ".../apis/user/fetch",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
                    'Cache-Control': 'no-cache',
                    'Pragma': 'no-cache',
                    "BEARER-TOKEN" : "-"
        },
        data:{
            fetchset:['name', 'email' ...]
            querypair:[
                [column_name, column_value],
                ["size", "14"],
                ["price", "<1000"]
                ...
            ]
        }
        ...
    ))
</User Fetch>

<User Update>
    axios({
        ...
        url: ".../apis/user/update",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
                    'Cache-Control': 'no-cache',
                    'Pragma': 'no-cache',
                    "BEARER-TOKEN" : "-"
        },
        data:{
            updset:{
                'name':"New Name", 
                'email' "New Mail"
                ...
            }
            querypair:[
                [column_name, column_value],
                ["size", "14"],
                ["price", "<1000"]
                ...
            ]
        }
        ...
    ))
</User Update>



<Product Create>

    let f_data = new FormData();

    //save image in f_data in the format below
    //Where i is the insert number of the fileObject -- starts from 1
    form_data["file-" + i] = fileObject;
    
    
    data = {
        'name' : "product_name",
        'price' : product_name,
        'description' : "product_description",
        'type' : "type",    // Can be "Dyed", "Natural_Dyed", "Undyed" etc... 
        'category' : "category", //Can be "Shoe", "Bag", "Shirt" etc...
    }

    //Insert the product bio as described in data above as "createset"
    fd.append('createset', JSON.stringify(data));


    //count is the total number of images
    fd.append('number_of_images', count);

    
    axios({
        ...
        url: ".../apis/product/create",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
                    'Cache-Control': 'no-cache',
                    'Pragma': 'no-cache',
                    "BEARER-TOKEN" : "-"
        },
        data:f_data
        ...
    ))
    Example Success
    {
        "status":"200",
        "data":{
            "user":"v78Q"
        }
    }
</Product Create>



<Waitlist Create>
    
    data = {
        'name' : "v78Q",
        'email' : "base@base.com",
        'message' : "author_code",
        'otherdata' : "-",//JSON.stringify({other_needed_datas_here})
        'date':"24th June 2024"
    }    
    
    axios({
        ...
        url: ".../apis/product/create",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
                    'Cache-Control': 'no-cache',
                    'Pragma': 'no-cache',
                    "BEARER-TOKEN" : "-"
        },
        data:data
        ...
    ))
    Example Success
    {
        "status":"200",
        "data":{
            "waitlist_code":"v78Q"
        }
    }
</Waitlist Create>

<Waitlist Fetch>
    axios({
        ...
        url: ".../apis/waitlist/fetchwaiters",
        method: 'POST',
        headers: {
            'Access-Control-Allow-Origin':"*",
                    'Cache-Control': 'no-cache',
                    'Pragma': 'no-cache',
                    "BEARER-TOKEN" : "-"
        },
        data:{
            fetchset:['name', 'email' ...]
        }
        ...
    ))
</Waitlist Fetch>